// <auto-generated />
using ApartmentCrawler.DbProvider;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApartmentCrawler.Migrations
{
    [DbContext(typeof(AptCrawlerContext))]
    [Migration("20220827045300_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("ApartmentCrawler.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AdtypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AreaSize")
                        .HasColumnType("TEXT");

                    b.Property<string>("AreaSizeTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AreaSizeValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bedrooms")
                        .HasColumnType("TEXT");

                    b.Property<string>("Canalization")
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Electricity")
                        .HasColumnType("TEXT");

                    b.Property<string>("EstateTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Floor")
                        .HasColumnType("TEXT");

                    b.Property<string>("HasLogo")
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeSelfie")
                        .HasColumnType("TEXT");

                    b.Property<string>("LLiving")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocId")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaklerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaklerName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MapLat")
                        .HasColumnType("TEXT");

                    b.Property<string>("MapLon")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OsmId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParkingId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PathwayJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Photo")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoVer")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotosCount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Road")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rooms")
                        .HasColumnType("TEXT");

                    b.Property<string>("SeoNameJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("SeoTitleJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecialPersons")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubmissionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vip")
                        .HasColumnType("TEXT");

                    b.Property<string>("Water")
                        .HasColumnType("TEXT");

                    b.Property<string>("YardSize")
                        .HasColumnType("TEXT");

                    b.Property<string>("YardSizeTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ApartmentCrawler.Entities.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgreeTBCTerms")
                        .HasColumnType("TEXT");

                    b.Property<string>("GenderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonalDataAgreement")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
